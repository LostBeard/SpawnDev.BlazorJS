<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<Version>2.2.88</Version>
		<CompressionEnabled>false</CompressionEnabled>
	</PropertyGroup>
	
	<ItemGroup>
		<PackageReference Include="Markdig" Version="0.35.0" />
		<PackageReference Include="Markdown.ColorCode" Version="2.2.1" />
		<PackageReference Include="Radzen.Blazor" Version="4.25.11" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="8.0.3" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="8.0.3" PrivateAssets="all" />
		<PackageReference Include="SpawnDev.BlazorJS.WebWorkers" Version="2.2.88" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\SpawnDev.Blazor.UnitTesting\SpawnDev.Blazor.UnitTesting.csproj" />
	</ItemGroup>
	
	<!-- 
	<ItemGroup>
		<ProjectReference Include="..\SpawnDev.BlazorJS.WebWorkers\SpawnDev.BlazorJS.WebWorkers.csproj" />
		<ProjectReference Include="..\SpawnDev.BlazorJS\SpawnDev.BlazorJS.csproj" />
	</ItemGroup>
	-->

	<!-- SpawnDev.BlazorJS.WebWorkers config -->
	<PropertyGroup>
		<!-- 
		WebWorkerPatchFramework
		- To run Blazor WASM in non-window scopes (DedicatedWorker, SharedWorker, ServiceWorker) Blazor framework files need to be patched.
		- Patching can be done at runtime in Javascript, or at build time. 
		- Build time patching gives better performance and works with stricter ContentSecurityPolicy rules
		- false - patch at runtime (current default)
		- true  - patch during build
		-->
		<WebWorkerPatchFramework>true</WebWorkerPatchFramework>
	</PropertyGroup>

</Project>

