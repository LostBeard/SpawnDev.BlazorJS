@page "/faceapi"

<RadzenCard>
    <div>
        <button onclick="@(() => _ = RefreshCameraList(true))">Refresh Camera List</button>
    </div>
    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Camera</RadzenText>
    <RadzenDropDown @bind-Value=@_selectedDevice AllowClear="true" TValue="MediaDeviceInfo" Class="w-100" Data=@_devices Change=@(args => OnDeviceChange(args as MediaDeviceInfo))>
        <Template>
            Video: @((context as MediaDeviceInfo)?.Label)
        </Template>
    </RadzenDropDown>
</RadzenCard>

<div>
    <div style="padding: 4px;">
        <p>
            <a href="https://github.com/justadudewhohacks/face-api.js/" target="_blank">face-api.js GitHub Repo</a><br />
            NOTE: The face-api.js library can take a few seconds to initialize.
        </p>
    </div>
    <div>
        Faces: @_facesFnd
    </div>
    <div>
        FPS: @_fps 
    </div>
    <div>
        Dropped: @_fpsDropped
    </div>
    <div>
        Workers: @WebWorkerService.WorkerTask.WorkersRunning
    </div>
    <div style="padding: 4px;">
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Enable Processing</RadzenText>
        <RadzenSwitch @bind-Value=@_enableProcessing Disabled="@_processingDisabled" />
    </div>
    <div style="padding: 4px;">
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">With Landmarks</RadzenText>
        <RadzenSwitch @bind-Value=@_withLandmarks />
    </div>
    <div>
        <RadzenCard>
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Worker Pool @WebWorkerService.WorkerTask.WorkersIdle / @WebWorkerService.WorkerTask.WorkersRunning / @WebWorkerService.WorkerTask.PoolSize / @_workerPool.MaxPoolSize (Idle/Running/Requested/Max)</RadzenText>
            <RadzenSlider @bind-Value=@WebWorkerService.WorkerTask.PoolSize TValue="int" Min="0" Max=@WebWorkerService.WorkerTask.MaxPoolSize />
        </RadzenCard>
    </div>
    <div style="padding: 4px;">
        <canvas style="zoom: 50%;" @ref="_cameraCanvasProcessedElRef"></canvas>
    </div>
    <pre class="prettyprint" lang-cs style="display: none;">
    public class ProcessFrameResult : IDisposable
    {
        public ArrayBuffer? ArrayBuffer { get; set; }
        public int FacesFound { get; set; }
        public void Dispose()
        {
            ArrayBuffer?.Dispose();
        }
    }
    </pre>
</div>

@code {

}
