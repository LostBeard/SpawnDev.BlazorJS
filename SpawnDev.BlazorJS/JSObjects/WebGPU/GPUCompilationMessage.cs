using Microsoft.JSInterop;

namespace SpawnDev.BlazorJS.JSObjects
{
    /// <summary>
    /// The GPUCompilationMessage interface of the WebGPU API represents a single informational, warning, or error message generated by the GPU shader module compiler.<br/>
    /// An array of GPUCompilationMessage objects is available in the messages property of the GPUCompilationInfo object accessed via GPUShaderModule.getCompilationInfo().<br/>
    /// https://developer.mozilla.org/en-US/docs/Web/API/GPUCompilationMessage
    /// </summary>
    public class GPUCompilationMessage : JSObject
    {
        /// <inheritdoc/>
        public GPUCompilationMessage(IJSInProcessObjectReference _ref) : base(_ref) { }
        /// <summary>
        /// A number representing the length of the substring that the message corresponds to.
        /// </summary>
        public int Length => JSRef!.Get<int>("length");
        /// <summary>
        /// A number representing the line number in the shader code that the message corresponds to.
        /// </summary>
        public int LineNum => JSRef!.Get<int>("lineNum");
        /// <summary>
        /// A number representing the position in the code line that the message corresponds to. This could be an exact point, or the start of the relevant substring.
        /// </summary>
        public int LinePos => JSRef!.Get<int>("linePos");
        /// <summary>
        /// A string representing human-readable message text.
        /// </summary>
        public string Message => JSRef!.Get<string>("message");
        /// <summary>
        /// A number representing the offset from the start of the shader code to the exact point, or the start of the relevant substring, that the message corresponds to.
        /// </summary>
        public int Offset => JSRef!.Get<int>("offset");
        /// <summary>
        /// An enumerated value representing the type of the message — "error", "info", or "warning".
        /// </summary>
        public string Type => JSRef!.Get<string>("type");
    }
}
